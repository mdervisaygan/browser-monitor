--- ./cdp/chrome-unstable_143.0.7445.0.protocol.json	2025-10-10 17:00:52.627606479 +0000
+++ ./cdp/chrome-unstable_143.0.7461.2.protocol.json	2025-10-10 17:01:30.972913359 +0000
@@ -3532,7 +3532,7 @@
       "commands": [
         {
           "name": "setPermission",
-          "description": "Set permission settings for given requesting and embedding origins.",
+          "description": "Set permission settings for given embedding and embedded origins.",
           "experimental": true,
           "parameters": [
             {
@@ -3547,13 +3547,13 @@
             },
             {
               "name": "origin",
-              "description": "Requesting origin the permission applies to, all origins if not specified.",
+              "description": "Embedding origin the permission applies to, all origins if not specified.",
               "optional": true,
               "type": "string"
             },
             {
-              "name": "embeddingOrigin",
-              "description": "Embedding origin the permission applies to. It is ignored unless the requesting origin is\npresent and valid. If the requesting origin is provided but the embedding origin isn't, the\nrequesting origin is used as the embedding origin.",
+              "name": "embeddedOrigin",
+              "description": "Embedded origin the permission applies to. It is ignored unless the embedding origin is\npresent and valid. If the embedding origin is provided but the embedded origin isn't, the\nembedding origin is used as the embedded origin.",
               "optional": true,
               "type": "string"
             },
@@ -3567,8 +3567,9 @@
         },
         {
           "name": "grantPermissions",
-          "description": "Grant specific permissions to the given origin and reject all others.",
+          "description": "Grant specific permissions to the given origin and reject all others. Deprecated. Use\nsetPermission instead.",
           "experimental": true,
+          "deprecated": true,
           "parameters": [
             {
               "name": "permissions",
@@ -16551,7 +16552,7 @@
           "properties": [
             {
               "name": "urlPattern",
-              "description": "Only matching requests will be affected by these conditions. Patterns use the URLPattern constructor string\nsyntax (https://urlpattern.spec.whatwg.org/). If the pattern is empty, all requests are matched (including p2p\nconnections).",
+              "description": "Only matching requests will be affected by these conditions. Patterns use the URLPattern constructor string\nsyntax (https://urlpattern.spec.whatwg.org/) and must be absolute. If the pattern is empty, all requests are\nmatched (including p2p connections).",
               "type": "string"
             },
             {
@@ -16596,6 +16597,23 @@
           ]
         },
         {
+          "id": "BlockPattern",
+          "experimental": true,
+          "type": "object",
+          "properties": [
+            {
+              "name": "urlPattern",
+              "description": "URL pattern to match. Patterns use the URLPattern constructor string syntax\n(https://urlpattern.spec.whatwg.org/) and must be absolute. Example: `*://*:*/*.css`.",
+              "type": "string"
+            },
+            {
+              "name": "block",
+              "description": "Whether or not to block the pattern. If false, a matching request will not be blocked even if it matches a later\n`BlockPattern`.",
+              "type": "boolean"
+            }
+          ]
+        },
+        {
           "id": "DirectSocketDnsQueryType",
           "experimental": true,
           "type": "string",
@@ -17271,7 +17289,7 @@
         },
         {
           "name": "emulateNetworkConditionsByRule",
-          "description": "Activates emulation of network conditions for individual requests using URL match patterns.",
+          "description": "Activates emulation of network conditions for individual requests using URL match patterns. Unlike the deprecated\nNetwork.emulateNetworkConditions this method does not affect `navigator` state. Use Network.overrideNetworkState to\nexplicitly modify `navigator` behavior.",
           "experimental": true,
           "parameters": [
             {
@@ -17572,8 +17590,19 @@
           "experimental": true,
           "parameters": [
             {
+              "name": "urlPatterns",
+              "description": "Patterns to match in the order in which they are given. These patterns\nalso take precedence over any wildcard patterns defined in `urls`.",
+              "optional": true,
+              "type": "array",
+              "items": {
+                "$ref": "BlockPattern"
+              }
+            },
+            {
               "name": "urls",
               "description": "URL patterns to block. Wildcards ('*') are allowed.",
+              "deprecated": true,
+              "optional": true,
               "type": "array",
               "items": {
                 "type": "string"
@@ -24225,7 +24254,8 @@
           "type": "string",
           "enum": [
             "Prefetch",
-            "Prerender"
+            "Prerender",
+            "PrerenderUntilScript"
           ]
         },
         {
