--- ./cdp/chrome-unstable_139.0.7207.2.protocol.json	2025-06-06 00:02:40.658524780 +0000
+++ ./cdp/chrome-unstable_139.0.7219.3.protocol.json	2025-06-06 00:03:12.753833518 +0000
@@ -6290,6 +6290,7 @@
             "view-transition",
             "view-transition-group",
             "view-transition-image-pair",
+            "view-transition-group-children",
             "view-transition-old",
             "view-transition-new",
             "placeholder",
@@ -18149,23 +18150,45 @@
         },
         {
           "id": "AdScriptId",
-          "description": "Identifies the bottom-most script which caused the frame to be labelled\nas an ad.",
+          "description": "Identifies the script which caused a script or frame to be labelled as an\nad.",
           "experimental": true,
           "type": "object",
           "properties": [
             {
               "name": "scriptId",
-              "description": "Script Id of the bottom-most script which caused the frame to be labelled\nas an ad.",
+              "description": "Script Id of the script which caused a script or frame to be labelled as\nan ad.",
               "$ref": "Runtime.ScriptId"
             },
             {
               "name": "debuggerId",
-              "description": "Id of adScriptId's debugger.",
+              "description": "Id of scriptId's debugger.",
               "$ref": "Runtime.UniqueDebuggerId"
             }
           ]
         },
         {
+          "id": "AdScriptAncestry",
+          "description": "Encapsulates the script ancestry and the root script filterlist rule that\ncaused the frame to be labelled as an ad. Only created when `ancestryChain`\nis not empty.",
+          "experimental": true,
+          "type": "object",
+          "properties": [
+            {
+              "name": "ancestryChain",
+              "description": "A chain of `AdScriptId`s representing the ancestry of an ad script that\nled to the creation of a frame. The chain is ordered from the script\nitself (lower level) up to its root ancestor that was flagged by\nfilterlist.",
+              "type": "array",
+              "items": {
+                "$ref": "AdScriptId"
+              }
+            },
+            {
+              "name": "rootScriptFilterlistRule",
+              "description": "The filterlist rule that caused the root (last) script in\n`ancestryChain` to be ad-tagged. Only populated if the rule is\navailable.",
+              "optional": true,
+              "type": "string"
+            }
+          ]
+        },
+        {
           "id": "SecureContextType",
           "description": "Indicates whether the frame is a secure context and why it is the case.",
           "experimental": true,
@@ -20090,7 +20113,7 @@
           ]
         },
         {
-          "name": "getAdScriptAncestryIds",
+          "name": "getAdScriptAncestry",
           "experimental": true,
           "parameters": [
             {
@@ -20100,12 +20123,10 @@
           ],
           "returns": [
             {
-              "name": "adScriptAncestryIds",
-              "description": "The ancestry chain of ad script identifiers leading to this frame's\ncreation, ordered from the most immediate script (in the frame creation\nstack) to more distant ancestors (that created the immediately preceding\nscript). Only sent if frame is labelled as an ad and ids are available.",
-              "type": "array",
-              "items": {
-                "$ref": "AdScriptId"
-              }
+              "name": "adScriptAncestry",
+              "description": "The ancestry chain of ad script identifiers leading to this frame's\ncreation, along with the root script's filterlist rule. The ancestry\nchain is ordered from the most immediate script (in the frame creation\nstack) to more distant ancestors (that created the immediately preceding\nscript). Only sent if frame is labelled as an ad and ids are available.",
+              "optional": true,
+              "$ref": "AdScriptAncestry"
             }
           ]
         },
