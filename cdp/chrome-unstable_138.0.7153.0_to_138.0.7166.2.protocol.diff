--- ./cdp/chrome-unstable_138.0.7153.0.protocol.json	2025-05-08 19:00:47.526316253 +0000
+++ ./cdp/chrome-unstable_138.0.7166.2.protocol.json	2025-05-08 19:01:49.215089071 +0000
@@ -13444,6 +13444,7 @@
             "mixed-content",
             "origin",
             "inspector",
+            "integrity",
             "subresource-filter",
             "content-type",
             "coep-frame-resource-needs-coep-header",
@@ -14617,6 +14618,75 @@
           ]
         },
         {
+          "id": "DirectUDPSocketOptions",
+          "experimental": true,
+          "type": "object",
+          "properties": [
+            {
+              "name": "remoteAddr",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "remotePort",
+              "description": "Unsigned int 16.",
+              "optional": true,
+              "type": "integer"
+            },
+            {
+              "name": "localAddr",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "localPort",
+              "description": "Unsigned int 16.",
+              "optional": true,
+              "type": "integer"
+            },
+            {
+              "name": "dnsQueryType",
+              "optional": true,
+              "$ref": "DirectSocketDnsQueryType"
+            },
+            {
+              "name": "sendBufferSize",
+              "description": "Expected to be unsigned integer.",
+              "optional": true,
+              "type": "number"
+            },
+            {
+              "name": "receiveBufferSize",
+              "description": "Expected to be unsigned integer.",
+              "optional": true,
+              "type": "number"
+            }
+          ]
+        },
+        {
+          "id": "DirectUDPMessage",
+          "experimental": true,
+          "type": "object",
+          "properties": [
+            {
+              "name": "data",
+              "type": "binary"
+            },
+            {
+              "name": "remoteAddr",
+              "description": "Null for connected mode.",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "remotePort",
+              "description": "Null for connected mode.\nExpected to be unsigned integer.",
+              "optional": true,
+              "type": "integer"
+            }
+          ]
+        },
+        {
           "id": "PrivateNetworkRequestPolicy",
           "experimental": true,
           "type": "string",
@@ -15175,6 +15245,13 @@
               "description": "Longest post body size (in bytes) that would be included in requestWillBeSent notification",
               "optional": true,
               "type": "integer"
+            },
+            {
+              "name": "reportDirectSocketTraffic",
+              "description": "Whether DirectSocket chunk send/receive events should be reported.",
+              "experimental": true,
+              "optional": true,
+              "type": "boolean"
             }
           ]
         },
@@ -16412,8 +16489,67 @@
           ]
         },
         {
-          "name": "directTCPSocketChunkError",
-          "description": "Fired when there is an error\nwhen writing to tcp direct socket stream.\nFor example, if user writes illegal type like string\ninstead of ArrayBuffer or ArrayBufferView.\nThere's no reporting for reading, because\nwe cannot know errors on the other side.",
+          "name": "directUDPSocketCreated",
+          "description": "Fired upon direct_socket.UDPSocket creation.",
+          "experimental": true,
+          "parameters": [
+            {
+              "name": "identifier",
+              "$ref": "RequestId"
+            },
+            {
+              "name": "options",
+              "$ref": "DirectUDPSocketOptions"
+            },
+            {
+              "name": "timestamp",
+              "$ref": "MonotonicTime"
+            },
+            {
+              "name": "initiator",
+              "optional": true,
+              "$ref": "Initiator"
+            }
+          ]
+        },
+        {
+          "name": "directUDPSocketOpened",
+          "description": "Fired when direct_socket.UDPSocket connection is opened.",
+          "experimental": true,
+          "parameters": [
+            {
+              "name": "identifier",
+              "$ref": "RequestId"
+            },
+            {
+              "name": "localAddr",
+              "type": "string"
+            },
+            {
+              "name": "localPort",
+              "description": "Expected to be unsigned integer.",
+              "type": "integer"
+            },
+            {
+              "name": "timestamp",
+              "$ref": "MonotonicTime"
+            },
+            {
+              "name": "remoteAddr",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "remotePort",
+              "description": "Expected to be unsigned integer.",
+              "optional": true,
+              "type": "integer"
+            }
+          ]
+        },
+        {
+          "name": "directUDPSocketAborted",
+          "description": "Fired when direct_socket.UDPSocket is aborted.",
           "experimental": true,
           "parameters": [
             {
@@ -16431,6 +16567,59 @@
           ]
         },
         {
+          "name": "directUDPSocketClosed",
+          "description": "Fired when direct_socket.UDPSocket is closed.",
+          "experimental": true,
+          "parameters": [
+            {
+              "name": "identifier",
+              "$ref": "RequestId"
+            },
+            {
+              "name": "timestamp",
+              "$ref": "MonotonicTime"
+            }
+          ]
+        },
+        {
+          "name": "directUDPSocketChunkSent",
+          "description": "Fired when message is sent to udp direct socket stream.",
+          "experimental": true,
+          "parameters": [
+            {
+              "name": "identifier",
+              "$ref": "RequestId"
+            },
+            {
+              "name": "message",
+              "$ref": "DirectUDPMessage"
+            },
+            {
+              "name": "timestamp",
+              "$ref": "MonotonicTime"
+            }
+          ]
+        },
+        {
+          "name": "directUDPSocketChunkReceived",
+          "description": "Fired when message is received from udp direct socket stream.",
+          "experimental": true,
+          "parameters": [
+            {
+              "name": "identifier",
+              "$ref": "RequestId"
+            },
+            {
+              "name": "message",
+              "$ref": "DirectUDPMessage"
+            },
+            {
+              "name": "timestamp",
+              "$ref": "MonotonicTime"
+            }
+          ]
+        },
+        {
           "name": "requestWillBeSentExtraInfo",
           "description": "Fired when additional information about a requestWillBeSent event is available from the\nnetwork stack. Not every requestWillBeSent event will have an additional\nrequestWillBeSentExtraInfo fired for it, and there is no guarantee whether requestWillBeSent\nor requestWillBeSentExtraInfo will be fired first for the same request.",
           "experimental": true,
@@ -23373,6 +23562,17 @@
           ]
         },
         {
+          "id": "AttributionReportingReportResult",
+          "experimental": true,
+          "type": "string",
+          "enum": [
+            "sent",
+            "prohibited",
+            "failedToAssemble",
+            "expired"
+          ]
+        },
+        {
           "id": "RelatedWebsiteSet",
           "description": "A single Related Website Set object.",
           "experimental": true,
@@ -24263,6 +24463,40 @@
               "$ref": "AttributionReportingAggregatableResult"
             }
           ]
+        },
+        {
+          "name": "attributionReportingReportSent",
+          "experimental": true,
+          "parameters": [
+            {
+              "name": "url",
+              "type": "string"
+            },
+            {
+              "name": "body",
+              "type": "object"
+            },
+            {
+              "name": "result",
+              "$ref": "AttributionReportingReportResult"
+            },
+            {
+              "name": "netError",
+              "description": "If result is `sent`, populated with net/HTTP status.",
+              "optional": true,
+              "type": "integer"
+            },
+            {
+              "name": "netErrorName",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "httpStatusCode",
+              "optional": true,
+              "type": "integer"
+            }
+          ]
         }
       ]
     },
@@ -28170,6 +28404,15 @@
           ]
         },
         {
+          "id": "DescriptorOperationType",
+          "description": "Indicates the various types of descriptor operation.",
+          "type": "string",
+          "enum": [
+            "read",
+            "write"
+          ]
+        },
+        {
           "id": "ManufacturerData",
           "description": "Stores the manufacturer data",
           "type": "object",
@@ -28406,6 +28649,29 @@
           ]
         },
         {
+          "name": "simulateDescriptorOperationResponse",
+          "description": "Simulates the response from the descriptor with |descriptorId| for a\ndescriptor operation of |type|. The |code| value follows the Error\nCodes from Bluetooth Core Specification Vol 3 Part F 3.4.1.1 Error Response.\nThe |data| is expected to exist when simulating a successful read operation\nresponse.",
+          "parameters": [
+            {
+              "name": "descriptorId",
+              "type": "string"
+            },
+            {
+              "name": "type",
+              "$ref": "DescriptorOperationType"
+            },
+            {
+              "name": "code",
+              "type": "integer"
+            },
+            {
+              "name": "data",
+              "optional": true,
+              "type": "binary"
+            }
+          ]
+        },
+        {
           "name": "addService",
           "description": "Adds a service with |serviceUuid| to the peripheral with |address|.",
           "parameters": [
@@ -28501,6 +28767,16 @@
               "type": "string"
             }
           ]
+        },
+        {
+          "name": "simulateGATTDisconnection",
+          "description": "Simulates a GATT disconnection from the peripheral with |address|.",
+          "parameters": [
+            {
+              "name": "address",
+              "type": "string"
+            }
+          ]
         }
       ],
       "events": [
@@ -28541,6 +28817,25 @@
               "$ref": "CharacteristicWriteType"
             }
           ]
+        },
+        {
+          "name": "descriptorOperationReceived",
+          "description": "Event for when a descriptor operation of |type| to the descriptor\nrespresented by |descriptorId| happened. |data| is expected to exist when\n|type| is write.",
+          "parameters": [
+            {
+              "name": "descriptorId",
+              "type": "string"
+            },
+            {
+              "name": "type",
+              "$ref": "CharacteristicOperationType"
+            },
+            {
+              "name": "data",
+              "optional": true,
+              "type": "binary"
+            }
+          ]
         }
       ]
     },
