--- ./cdp/chrome-stable_137.0.7151.119.protocol.json	2025-06-24 19:00:48.339198892 +0000
+++ ./cdp/chrome-stable_138.0.7204.49.protocol.json	2025-06-24 19:01:29.828392400 +0000
@@ -2060,6 +2060,31 @@
           ]
         },
         {
+          "id": "UserReidentificationIssueType",
+          "type": "string",
+          "enum": [
+            "BlockedFrameNavigation",
+            "BlockedSubresource"
+          ]
+        },
+        {
+          "id": "UserReidentificationIssueDetails",
+          "description": "This issue warns about uses of APIs that may be considered misuse to\nre-identify users.",
+          "type": "object",
+          "properties": [
+            {
+              "name": "type",
+              "$ref": "UserReidentificationIssueType"
+            },
+            {
+              "name": "request",
+              "description": "Applies to BlockedFrameNavigation and BlockedSubresource issue types.",
+              "optional": true,
+              "$ref": "AffectedRequest"
+            }
+          ]
+        },
+        {
           "id": "InspectorIssueCode",
           "description": "A unique identifier for the type of issue. Each type may use one of the\noptional fields in InspectorIssueDetails to convey more specific\ninformation about the kind of issue.",
           "type": "string",
@@ -2087,7 +2112,8 @@
             "PropertyRuleIssue",
             "SharedDictionaryIssue",
             "SelectElementAccessibilityIssue",
-            "SRIMessageSignatureIssue"
+            "SRIMessageSignatureIssue",
+            "UserReidentificationIssue"
           ]
         },
         {
@@ -2215,6 +2241,11 @@
               "name": "sriMessageSignatureIssueDetails",
               "optional": true,
               "$ref": "SRIMessageSignatureIssueDetails"
+            },
+            {
+              "name": "userReidentificationIssueDetails",
+              "optional": true,
+              "$ref": "UserReidentificationIssueDetails"
             }
           ]
         },
@@ -3512,6 +3543,13 @@
                 "completed",
                 "canceled"
               ]
+            },
+            {
+              "name": "filePath",
+              "description": "If download is \"completed\", provides the path of the downloaded file.\nDepending on the platform, it is not guaranteed to be set, nor the file\nis guaranteed to exist.",
+              "experimental": true,
+              "optional": true,
+              "type": "string"
             }
           ]
         }
@@ -6257,7 +6295,8 @@
             "placeholder",
             "file-selector-button",
             "details-content",
-            "picker"
+            "picker",
+            "permission-icon"
           ]
         },
         {
@@ -7376,7 +7415,8 @@
               "type": "string",
               "enum": [
                 "PopoverTarget",
-                "InterestTarget"
+                "InterestTarget",
+                "CommandFor"
               ]
             }
           ],
@@ -10231,7 +10271,7 @@
         },
         {
           "name": "setPressureStateOverride",
-          "description": "Provides a given pressure state that will be processed and eventually be\ndelivered to PressureObserver users. |source| must have been previously\noverridden by setPressureSourceOverrideEnabled.",
+          "description": "TODO: OBSOLETE: To remove when setPressureDataOverride is merged.\nProvides a given pressure state that will be processed and eventually be\ndelivered to PressureObserver users. |source| must have been previously\noverridden by setPressureSourceOverrideEnabled.",
           "experimental": true,
           "parameters": [
             {
@@ -10245,6 +10285,26 @@
           ]
         },
         {
+          "name": "setPressureDataOverride",
+          "description": "Provides a given pressure data set that will be processed and eventually be\ndelivered to PressureObserver users. |source| must have been previously\noverridden by setPressureSourceOverrideEnabled.",
+          "experimental": true,
+          "parameters": [
+            {
+              "name": "source",
+              "$ref": "PressureSource"
+            },
+            {
+              "name": "state",
+              "$ref": "PressureState"
+            },
+            {
+              "name": "ownContributionEstimate",
+              "optional": true,
+              "type": "number"
+            }
+          ]
+        },
+        {
           "name": "setIdleOverride",
           "description": "Overrides the Idle state.",
           "parameters": [
@@ -12909,6 +12969,7 @@
             "Ping",
             "CSPViolationReport",
             "Preflight",
+            "FedCM",
             "Other"
           ]
         },
@@ -13413,6 +13474,7 @@
             "mixed-content",
             "origin",
             "inspector",
+            "integrity",
             "subresource-filter",
             "content-type",
             "coep-frame-resource-needs-coep-header",
@@ -14586,6 +14648,75 @@
           ]
         },
         {
+          "id": "DirectUDPSocketOptions",
+          "experimental": true,
+          "type": "object",
+          "properties": [
+            {
+              "name": "remoteAddr",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "remotePort",
+              "description": "Unsigned int 16.",
+              "optional": true,
+              "type": "integer"
+            },
+            {
+              "name": "localAddr",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "localPort",
+              "description": "Unsigned int 16.",
+              "optional": true,
+              "type": "integer"
+            },
+            {
+              "name": "dnsQueryType",
+              "optional": true,
+              "$ref": "DirectSocketDnsQueryType"
+            },
+            {
+              "name": "sendBufferSize",
+              "description": "Expected to be unsigned integer.",
+              "optional": true,
+              "type": "number"
+            },
+            {
+              "name": "receiveBufferSize",
+              "description": "Expected to be unsigned integer.",
+              "optional": true,
+              "type": "number"
+            }
+          ]
+        },
+        {
+          "id": "DirectUDPMessage",
+          "experimental": true,
+          "type": "object",
+          "properties": [
+            {
+              "name": "data",
+              "type": "binary"
+            },
+            {
+              "name": "remoteAddr",
+              "description": "Null for connected mode.",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "remotePort",
+              "description": "Null for connected mode.\nExpected to be unsigned integer.",
+              "optional": true,
+              "type": "integer"
+            }
+          ]
+        },
+        {
           "id": "PrivateNetworkRequestPolicy",
           "experimental": true,
           "type": "string",
@@ -15144,6 +15275,13 @@
               "description": "Longest post body size (in bytes) that would be included in requestWillBeSent notification",
               "optional": true,
               "type": "integer"
+            },
+            {
+              "name": "reportDirectSocketTraffic",
+              "description": "Whether DirectSocket chunk send/receive events should be reported.",
+              "experimental": true,
+              "optional": true,
+              "type": "boolean"
             }
           ]
         },
@@ -15644,7 +15782,7 @@
         },
         {
           "name": "setCookieControls",
-          "description": "Sets Controls for third-party cookie access\nPage reload is required before the new cookie bahavior will be observed",
+          "description": "Sets Controls for third-party cookie access\nPage reload is required before the new cookie behavior will be observed",
           "experimental": true,
           "parameters": [
             {
@@ -16381,8 +16519,67 @@
           ]
         },
         {
-          "name": "directTCPSocketChunkError",
-          "description": "Fired when there is an error\nwhen writing to tcp direct socket stream.\nFor example, if user writes illegal type like string\ninstead of ArrayBuffer or ArrayBufferView.\nThere's no reporting for reading, because\nwe cannot know errors on the other side.",
+          "name": "directUDPSocketCreated",
+          "description": "Fired upon direct_socket.UDPSocket creation.",
+          "experimental": true,
+          "parameters": [
+            {
+              "name": "identifier",
+              "$ref": "RequestId"
+            },
+            {
+              "name": "options",
+              "$ref": "DirectUDPSocketOptions"
+            },
+            {
+              "name": "timestamp",
+              "$ref": "MonotonicTime"
+            },
+            {
+              "name": "initiator",
+              "optional": true,
+              "$ref": "Initiator"
+            }
+          ]
+        },
+        {
+          "name": "directUDPSocketOpened",
+          "description": "Fired when direct_socket.UDPSocket connection is opened.",
+          "experimental": true,
+          "parameters": [
+            {
+              "name": "identifier",
+              "$ref": "RequestId"
+            },
+            {
+              "name": "localAddr",
+              "type": "string"
+            },
+            {
+              "name": "localPort",
+              "description": "Expected to be unsigned integer.",
+              "type": "integer"
+            },
+            {
+              "name": "timestamp",
+              "$ref": "MonotonicTime"
+            },
+            {
+              "name": "remoteAddr",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "remotePort",
+              "description": "Expected to be unsigned integer.",
+              "optional": true,
+              "type": "integer"
+            }
+          ]
+        },
+        {
+          "name": "directUDPSocketAborted",
+          "description": "Fired when direct_socket.UDPSocket is aborted.",
           "experimental": true,
           "parameters": [
             {
@@ -16400,6 +16597,59 @@
           ]
         },
         {
+          "name": "directUDPSocketClosed",
+          "description": "Fired when direct_socket.UDPSocket is closed.",
+          "experimental": true,
+          "parameters": [
+            {
+              "name": "identifier",
+              "$ref": "RequestId"
+            },
+            {
+              "name": "timestamp",
+              "$ref": "MonotonicTime"
+            }
+          ]
+        },
+        {
+          "name": "directUDPSocketChunkSent",
+          "description": "Fired when message is sent to udp direct socket stream.",
+          "experimental": true,
+          "parameters": [
+            {
+              "name": "identifier",
+              "$ref": "RequestId"
+            },
+            {
+              "name": "message",
+              "$ref": "DirectUDPMessage"
+            },
+            {
+              "name": "timestamp",
+              "$ref": "MonotonicTime"
+            }
+          ]
+        },
+        {
+          "name": "directUDPSocketChunkReceived",
+          "description": "Fired when message is received from udp direct socket stream.",
+          "experimental": true,
+          "parameters": [
+            {
+              "name": "identifier",
+              "$ref": "RequestId"
+            },
+            {
+              "name": "message",
+              "$ref": "DirectUDPMessage"
+            },
+            {
+              "name": "timestamp",
+              "$ref": "MonotonicTime"
+            }
+          ]
+        },
+        {
           "name": "requestWillBeSentExtraInfo",
           "description": "Fired when additional information about a requestWillBeSent event is available from the\nnetwork stack. Not every requestWillBeSent event will have an additional\nrequestWillBeSentExtraInfo fired for it, and there is no guarantee whether requestWillBeSent\nor requestWillBeSentExtraInfo will be fired first for the same request.",
           "experimental": true,
@@ -18024,6 +18274,7 @@
             "media-playback-while-not-visible",
             "microphone",
             "midi",
+            "on-device-speech-recognition",
             "otp-credentials",
             "payment",
             "picture-in-picture",
@@ -22584,6 +22835,12 @@
               "type": "string"
             },
             {
+              "name": "operationId",
+              "description": "ID of the operation call.\nPresent only for SharedStorageAccessMethods: run and selectURL.",
+              "optional": true,
+              "type": "string"
+            },
+            {
               "name": "keepAlive",
               "description": "Whether or not to keep the worket alive for future run or selectURL\ncalls.\nPresent only for SharedStorageAccessMethods: run and selectURL.",
               "optional": true,
@@ -22635,10 +22892,16 @@
               "type": "boolean"
             },
             {
-              "name": "workletId",
-              "description": "If the method is called on a worklet, or as part of\na worklet script, it will have an ID for the associated worklet.\nPresent only for SharedStorageAccessMethods: addModule, createWorklet,\nrun, selectURL, and any other SharedStorageAccessMethod when the\nSharedStorageAccessScope is worklet.",
+              "name": "workletOrdinal",
+              "description": "If the method is called on a shared storage worklet, or as part of\na shared storage worklet script, it will have a number for the\nassociated worklet, denoting the (0-indexed) order of the worklet's\ncreation relative to all other shared storage worklets created by\ndocuments using the current storage partition.\nPresent only for SharedStorageAccessMethods: addModule, createWorklet,\nrun, selectURL, and any other SharedStorageAccessMethod when the\nSharedStorageAccessScope is sharedStorageWorklet.\nTODO(crbug.com/401011862): Pass this only for addModule & createWorklet.",
               "optional": true,
-              "type": "string"
+              "type": "integer"
+            },
+            {
+              "name": "workletTargetId",
+              "description": "Hex representation of the DevTools token used as the TargetID for the\nassociated shared storage worklet.\nPresent only for SharedStorageAccessMethods: addModule, createWorklet,\nrun, selectURL, and any other SharedStorageAccessMethod when the\nSharedStorageAccessScope is sharedStorageWorklet.",
+              "optional": true,
+              "$ref": "Target.TargetID"
             },
             {
               "name": "withLock",
@@ -22834,25 +23097,6 @@
           ]
         },
         {
-          "id": "AttributionReportingTriggerSpec",
-          "experimental": true,
-          "type": "object",
-          "properties": [
-            {
-              "name": "triggerData",
-              "description": "number instead of integer because not all uint32 can be represented by\nint",
-              "type": "array",
-              "items": {
-                "type": "number"
-              }
-            },
-            {
-              "name": "eventReportWindows",
-              "$ref": "AttributionReportingEventReportWindows"
-            }
-          ]
-        },
-        {
           "id": "AttributionReportingTriggerDataMatching",
           "experimental": true,
           "type": "string",
@@ -22966,13 +23210,18 @@
               "type": "integer"
             },
             {
-              "name": "triggerSpecs",
+              "name": "triggerData",
+              "description": "number instead of integer because not all uint32 can be represented by\nint",
               "type": "array",
               "items": {
-                "$ref": "AttributionReportingTriggerSpec"
+                "type": "number"
               }
             },
             {
+              "name": "eventReportWindows",
+              "$ref": "AttributionReportingEventReportWindows"
+            },
+            {
               "name": "aggregatableReportWindow",
               "description": "duration in seconds",
               "type": "integer"
@@ -23342,6 +23591,17 @@
           ]
         },
         {
+          "id": "AttributionReportingReportResult",
+          "experimental": true,
+          "type": "string",
+          "enum": [
+            "sent",
+            "prohibited",
+            "failedToAssemble",
+            "expired"
+          ]
+        },
+        {
           "id": "RelatedWebsiteSet",
           "description": "A single Related Website Set object.",
           "experimental": true,
@@ -24184,6 +24444,47 @@
           ]
         },
         {
+          "name": "sharedStorageWorkletOperationExecutionFinished",
+          "description": "A shared storage run or selectURL operation finished its execution.\nThe following parameters are included in all events.",
+          "parameters": [
+            {
+              "name": "finishedTime",
+              "description": "Time that the operation finished.",
+              "$ref": "Network.TimeSinceEpoch"
+            },
+            {
+              "name": "executionTime",
+              "description": "Time, in microseconds, from start of shared storage JS API call until\nend of operation execution in the worklet.",
+              "type": "integer"
+            },
+            {
+              "name": "method",
+              "description": "Enum value indicating the Shared Storage API method invoked.",
+              "$ref": "SharedStorageAccessMethod"
+            },
+            {
+              "name": "operationId",
+              "description": "ID of the operation call.",
+              "type": "string"
+            },
+            {
+              "name": "workletTargetId",
+              "description": "Hex representation of the DevTools token used as the TargetID for the\nassociated shared storage worklet.",
+              "$ref": "Target.TargetID"
+            },
+            {
+              "name": "mainFrameId",
+              "description": "DevTools Frame Token for the primary frame tree's root.",
+              "$ref": "Page.FrameId"
+            },
+            {
+              "name": "ownerOrigin",
+              "description": "Serialization of the origin owning the Shared Storage data.",
+              "type": "string"
+            }
+          ]
+        },
+        {
           "name": "storageBucketCreatedOrUpdated",
           "parameters": [
             {
@@ -24232,6 +24533,40 @@
               "$ref": "AttributionReportingAggregatableResult"
             }
           ]
+        },
+        {
+          "name": "attributionReportingReportSent",
+          "experimental": true,
+          "parameters": [
+            {
+              "name": "url",
+              "type": "string"
+            },
+            {
+              "name": "body",
+              "type": "object"
+            },
+            {
+              "name": "result",
+              "$ref": "AttributionReportingReportResult"
+            },
+            {
+              "name": "netError",
+              "description": "If result is `sent`, populated with net/HTTP status.",
+              "optional": true,
+              "type": "integer"
+            },
+            {
+              "name": "netErrorName",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "httpStatusCode",
+              "optional": true,
+              "type": "integer"
+            }
+          ]
         }
       ]
     },
@@ -27399,7 +27734,6 @@
             "InvalidSchemeRedirect",
             "InvalidSchemeNavigation",
             "NavigationRequestBlockedByCsp",
-            "MainFrameNavigation",
             "MojoBinderPolicy",
             "RendererProcessCrashed",
             "RendererProcessKilled",
@@ -28139,6 +28473,15 @@
           ]
         },
         {
+          "id": "DescriptorOperationType",
+          "description": "Indicates the various types of descriptor operation.",
+          "type": "string",
+          "enum": [
+            "read",
+            "write"
+          ]
+        },
+        {
           "id": "ManufacturerData",
           "description": "Stores the manufacturer data",
           "type": "object",
@@ -28375,6 +28718,29 @@
           ]
         },
         {
+          "name": "simulateDescriptorOperationResponse",
+          "description": "Simulates the response from the descriptor with |descriptorId| for a\ndescriptor operation of |type|. The |code| value follows the Error\nCodes from Bluetooth Core Specification Vol 3 Part F 3.4.1.1 Error Response.\nThe |data| is expected to exist when simulating a successful read operation\nresponse.",
+          "parameters": [
+            {
+              "name": "descriptorId",
+              "type": "string"
+            },
+            {
+              "name": "type",
+              "$ref": "DescriptorOperationType"
+            },
+            {
+              "name": "code",
+              "type": "integer"
+            },
+            {
+              "name": "data",
+              "optional": true,
+              "type": "binary"
+            }
+          ]
+        },
+        {
           "name": "addService",
           "description": "Adds a service with |serviceUuid| to the peripheral with |address|.",
           "parameters": [
@@ -28470,6 +28836,16 @@
               "type": "string"
             }
           ]
+        },
+        {
+          "name": "simulateGATTDisconnection",
+          "description": "Simulates a GATT disconnection from the peripheral with |address|.",
+          "parameters": [
+            {
+              "name": "address",
+              "type": "string"
+            }
+          ]
         }
       ],
       "events": [
@@ -28510,6 +28886,25 @@
               "$ref": "CharacteristicWriteType"
             }
           ]
+        },
+        {
+          "name": "descriptorOperationReceived",
+          "description": "Event for when a descriptor operation of |type| to the descriptor\nrespresented by |descriptorId| happened. |data| is expected to exist when\n|type| is write.",
+          "parameters": [
+            {
+              "name": "descriptorId",
+              "type": "string"
+            },
+            {
+              "name": "type",
+              "$ref": "DescriptorOperationType"
+            },
+            {
+              "name": "data",
+              "optional": true,
+              "type": "binary"
+            }
+          ]
         }
       ]
     },
